@use 'colors' as *;
@use 'variables' as *;
@use 'sass:map';

@import 'styles';

:root {

  font-family: 'Poppins', Tahoma, Geneva, Verdana, sans-serif;

  &[data-theme='light'] {
    @each $key, $value in $colorsLight {
      --#{$key}: #{$value};
    }

    --ifm-color-primary: #{map.get($colorsLight, 'primary')};
    --ifm-color-primary-dark: #{darken(map.get($colorsLight, 'primary'), 10%)};
    --ifm-color-primary-darker: #{darken(map.get($colorsLight, 'primary'), 20%)};
    --ifm-color-primary-darkest: #{darken(map.get($colorsLight, 'primary'), 30%)};
    --ifm-color-primary-light: #{lighten(map.get($colorsLight, 'primary'), 10%)};
    --ifm-color-primary-lighter: #{lighten(map.get($colorsLight, 'primary'), 20%)};
    --ifm-color-primary-lightest: #{lighten(map.get($colorsLight, 'primary'), 30%)};

    --ifm-code-background: var(--base-content);
  }

  &[data-theme='dark'] {
    @each $key, $value in $colorsDark {
      --#{$key}: #{$value};
    }

    --ifm-color-primary: #{map.get($colorsDark, 'primary')};
    --ifm-color-primary-dark: #{darken(map.get($colorsDark, 'primary'), 10%)};
    --ifm-color-primary-darker: #{darken(map.get($colorsDark, 'primary'), 20%)};
    --ifm-color-primary-darkest: #{darken(map.get($colorsDark, 'primary'), 30%)};
    --ifm-color-primary-light: #{lighten(map.get($colorsDark, 'primary'), 10%)};
    --ifm-color-primary-lighter: #{lighten(map.get($colorsDark, 'primary'), 20%)};
    --ifm-color-primary-lightest: #{lighten(map.get($colorsDark, 'primary'), 30%)};

    // background-image: url('@site/static/img/background.png');

    --search-local-modal-background: var(--base);
    --search-local-hit-background: lighten($base, 10%);
    --search-local-highlight-color: #{$secondary};
    --search-local-muted-color: #{$secondary};
    --ifm-navbar-search-input-background-color: var(--base-lighter);
    --ifm-navbar-search-input-color: var(--text);
  }

  background-color: var(--base);
  background-image: url('/static/img/background.svg');
  background-size: cover;
  background-blend-mode: overlay;
  background-position: top;
  background-repeat: no-repeat;
  color: var(--text);
  scroll-behavior: smooth;

  // blur noise overlay
  &::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background-image: url('/static/img/noise-texture.png');
    background-repeat: repeat;
    opacity: 0.04;
    pointer-events: none;
  }

  --ifm-menu-color: var(--text);
  --ifm-navbar-link-color: var(--text);
}

// Utilities
.text-center {
  text-align: center;
}

@mixin createUtilities($map, $attribute) {
  @each $key, $val in $map {
    &-#{$key} {
      #{$attribute}: #{$val} !important;
    }
  }
}

.bg {
  @include createUtilities($colorsDark, 'background-color');
}
.text {
  @include createUtilities($colorsDark, 'color');
}
